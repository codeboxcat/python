#写一个程序，统计当前目录下每个文件类型的文件数。
import os

all_files=os.listdir(os.curdir)#使用os.curdir表示当前目录更准确
type_dict=dict()

for each_file in all_files:
    if os.path.isdir(each_file):
        type_dict.setdefault('文件夹',0)
        type_dict['文件夹']+=1
    else:
        ext=os.path.splitext(each_file)[1]
        type_dict.setdefault(ext,0)
        type_dict[ext]+=1


for each_type in type_dict.keys():
    print('该文件夹下共有类型为[%s]的文件%d个'%(each_type,type_dict[each_type]))
    
    
    
    
    
 #写一个程序，计算当前文件夹下所有文件的大小。
 import os
all_files=os.listdir(os.curdir)
file_dict=dict()

for each_file in all_files:
    if os.path.isfile(each_file):
        file_size=os.path.getsize(each_file)
        file_dict[each_file]=file_size

for each in file_dict.items():
    print('%s[%dBytes]'%(each[0],each[1]))
    
    
 #写一个程序，用户输入文件名以及开始搜索的路径，素廋该文件是否存在，如果遇到文件夹，则进入文件夹继续搜索：
import  os
def search_file(start_dir,target):
    os.chdir(start_dir)

    for each_file in os.listdir(os.curdir):
        if each_file==target:
            print(os.getcwd()+os.sep+each_file)
        if os.path.isdir(each_file):
            search_file(each_file,target) #递归调用
            os.chdir(os.pardir)#递归调用后切记返回上一层目录



start_dir=input('请输入待查找的初始目录:')
target=input('请输入需要查找的目录文件:')
search_file(start_dir,target)
